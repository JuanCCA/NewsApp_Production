{"version":3,"sources":["components/NavBar.js","helpers/Petitions/fetch.js","helpers/News/archiveNew.js","helpers/Utils/dateFormater.js","components/News/New.js","helpers/News/getNews.js","helpers/News/createNew.js","components/News/FormCreateNew.js","components/News/CreateNew.js","views/News.js","hooks/useFetchNews.js","helpers/Archived/deleteArchived.js","components/Archived/ArchivedNew.js","helpers/Archived/getArchived.js","views/Archived.js","hooks/useFetchArchived.js","index.js"],"names":["NavBar","Navbar","bg","variant","sticky","Container","Brand","href","src","width","height","className","alt","Nav","Link","as","to","baseUrl","process","fetchAnonymous","endpoint","data","method","url","fetch","headers","body","JSON","stringify","archiveNew","_id","a","payload","resp","json","news","formatDate","d","date","Date","year","getFullYear","month","getMonth","toString","length","day","getDate","hour","getHours","minutes","getMinutes","New","title","description","content","author","archiveDate","setNews","formatedDate","handlerArchive","handlerDeleteFromList","filter","doc","Card","style","Body","Title","Subtitle","Text","Footer","Button","onClick","getNews","createNew","response","FormCreateNew","useState","setValidated","setTitle","setDescription","setContent","setAuthor","handleSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Form","id","onSubmit","Group","controlId","Label","Control","required","type","placeholder","value","onChange","e","target","CreateNew","show","setShow","Modal","onHide","Header","closeButton","News","loading","state","setState","useEffect","then","useFetchNews","newsList","align","map","item","deleteArchived","ArchivedNew","setArchived","handlerDeleteArchived","getArchived","archived","Archived","useFetchArchived","archivedList","require","config","ReactDOM","render","StrictMode","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.04a14188.chunk.js","sourcesContent":["import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport {Link} from 'react-router-dom'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\" >\r\n                    <img \r\n                        src=\"./icon.png\"\r\n                        width=\"35\"\r\n                        height=\"35\"\r\n                        className=\"d-inline-block align-top\"\r\n                        alt=\"\"\r\n                    />\r\n                    {' '}\r\n                    <span className=\"h3\">NewsApp</span></Navbar.Brand>\r\n                    <Nav className=\"m-auto\">\r\n                    <Nav.Link as={Link} to=\"/\" className=\"h3 mx-2\" >News</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"archived\" className=\"h3 mx-2\" >Archived</Nav.Link>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default NavBar","const baseUrl = process.env.REACT_APP_URI;\r\n\r\nexport const fetchAnonymous = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url =`${ baseUrl }/${ endpoint }`;\r\n\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n","import { fetchAnonymous } from \"../Petitions/fetch\";\r\n\r\n\r\nexport const archiveNew = async (_id) => {\r\n\r\n    //const url='http://localhost:4000/api/news/archive_new';\r\n    \r\n    const payload = {\r\n        _id: _id\r\n    }\r\n\r\n    \r\n    const resp = await fetchAnonymous('news/archive_new', payload, 'POST')\r\n    const news = await resp.json()\r\n    return news\r\n\r\n}","\r\n\r\n\r\nexport const formatDate = (d) => {\r\n\r\n    const date = new Date(d)\r\n\r\n    let year = date.getFullYear()\r\n\r\n    let month = (date.getMonth() + 1).toString()\r\n    if(month.length === 1) month = '0' + month;\r\n\r\n    let day = (date.getDate()).toString()\r\n    if(day.length === 1) day = '0' + day;\r\n\r\n    let hour = (date.getHours()).toString()\r\n    if(hour.length === 1) hour = '0' + hour;\r\n\r\n    let minutes = (date.getMinutes()).toString()\r\n    if(minutes.length === 1) minutes = '0' + minutes;\r\n\r\n    \r\n    const formatedDate = `${year}/${month}/${date.getDate()}  ${hour}:${minutes}`\r\n\r\n\r\n    return formatedDate\r\n\r\n}","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport {archiveNew} from '../../helpers/News/archiveNew'\r\nimport {formatDate} from '../../helpers/Utils/dateFormater'\r\nimport Button from 'react-bootstrap/Button'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst New = ({title,description,date,content,author,archiveDate,_id, setNews}) => {\r\n\r\n\r\n    const formatedDate = formatDate(date)\r\n\r\n    // Archive a New, adding an archiveDate to this object in DB\r\n    const handlerArchive = async() => {\r\n        const resp = await archiveNew(_id)\r\n        if(resp === 200){\r\n            handlerDeleteFromList()\r\n        }\r\n    }\r\n\r\n    // Delete this item from the list \r\n    const handlerDeleteFromList = () => {\r\n        setNews( (news) => {\r\n            return news.filter( doc => doc._id !== _id)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '90%' }} className=\"my-3\">\r\n        <Card.Body>\r\n            <Card.Title>{title}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">{description}</Card.Subtitle>\r\n            <Card.Text>{content}</Card.Text>\r\n            <Card.Footer >\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    Date: {formatedDate} \r\n                </div>\r\n                <div className=\"col\">\r\n                    Author: {author}\r\n                </div>\r\n                <div className=\"col\" >\r\n                    <Button onClick={handlerArchive}\r\n                            variant=\"dark\">\r\n                        <img \r\n                        src=\"./eye-off.png\"\r\n                        width=\"25\"\r\n                        height=\"25\"\r\n                        className=\"d-inline-block align-top\"   \r\n                        alt=\"\"                 \r\n                        >\r\n                    </img> Archive\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n                \r\n            </Card.Footer>\r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nNew.propTypes = {\r\n    _id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    content: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired,\r\n    setNews: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default New\r\n","import { fetchAnonymous } from \"../Petitions/fetch\";\r\n\r\nexport const getNews = async () => {\r\n\r\n    const resp = await fetchAnonymous( 'news/get_news', null)\r\n    const news = await resp.json()\r\n\r\n    return news\r\n\r\n}","import { fetchAnonymous } from \"../Petitions/fetch\";\r\n\r\n\r\nexport const createNew = async (title,description,content,author) => {\r\n\r\n    //const url='http://localhost:4000/api/news/archive_new';\r\n    \r\n    const payload = {\r\n        title,\r\n        description,\r\n        content,\r\n        author,\r\n    }\r\n\r\n    const resp = await fetchAnonymous('news/create_new', payload, 'POST')\r\n    const response = await resp.json()\r\n    return response\r\n\r\n}","import React, {useState} from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport { createNew } from '../../helpers/News/createNew';\r\n\r\n\r\n\r\nconst FormCreateNew = () => {\r\n\r\n\r\n    // Validator\r\n    const [, setValidated] = useState(false);\r\n\r\n\r\n    // Title\r\n    const [title, setTitle] = useState('')\r\n    const handleInputTitle = ( e ) => {\r\n        setTitle( e.target.value );\r\n    }\r\n\r\n    // Description\r\n    const [description, setDescription] = useState('')\r\n    const handleInputDescription = ( e ) => {\r\n        setDescription( e.target.value );\r\n    }\r\n\r\n    // Content\r\n    const [content, setContent] = useState('')\r\n    const handleInputContent = ( e ) => {\r\n        setContent( e.target.value );\r\n    }\r\n\r\n    // Author\r\n    const [author, setAuthor] = useState('')\r\n    const handleInputAuthor = ( e ) => {\r\n        setAuthor( e.target.value );\r\n    }\r\n\r\n    // Submit\r\n    const handleSubmit = async (event) => {\r\n        \r\n        const form = event.currentTarget;\r\n\r\n        if (form.checkValidity() === false) {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n        }\r\n        // Create New\r\n        await createNew(title,description,content,author);\r\n        setValidated(true);\r\n\r\n      };\r\n\r\n\r\n\r\n    return (\r\n        <Form id=\"form\" onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Title\"  value={title} onChange={handleInputTitle}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"description\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Description\" value={description} onChange={handleInputDescription}/>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"content\">\r\n                <Form.Label>Content</Form.Label>\r\n                <Form.Control required as=\"textarea\" placeholder=\"Content\" value={content} onChange={handleInputContent}/>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"author\">\r\n                <Form.Label>Author</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Author\" value={author} onChange={handleInputAuthor}/>\r\n            </Form.Group>\r\n            <Button variant=\"dark\" type=\"submit\" className=\"px-5\">\r\n                Save\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default FormCreateNew\r\n","import React, {useState} from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport FormCreateNew from './FormCreateNew';\r\n\r\nconst CreateNew = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n\r\n    return (\r\n        <>\r\n          <Button variant=\"dark\" \r\n                  onClick={handleShow}\r\n                  id=\"buttonModal\"\r\n          >\r\n            <img \r\n                src=\"./plus.png\"\r\n                width=\"25\"\r\n                height=\"25\"\r\n                className=\"d-inline-block align-top\"   \r\n                alt=\"\"                 \r\n                >\r\n            </img> \r\n            Create New\r\n          </Button>\r\n    \r\n          <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Create a New</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <FormCreateNew />\r\n                \r\n            </Modal.Body>\r\n\r\n          </Modal>\r\n        </>\r\n      );\r\n}\r\n\r\nexport default CreateNew\r\n","import React, { useState } from 'react'\r\nimport New from '../components/News/New'\r\nimport { useFetchNews } from '../hooks/useFetchNews'\r\nimport CreateNew from '../components/News/CreateNew'\r\n\r\nconst News = () => {\r\n \r\n    const [news,setNews] = useState([]) // funcion\r\n\r\n    const { data:newsList, loading } = useFetchNews( news );\r\n\r\n    return (\r\n        <>\r\n        <div className =\"d-flex justify-content-center\">\r\n            <p className=\"display-1 m-auto\">News</p>\r\n            <p className=\"m-auto\"><CreateNew /></p>\r\n        </div>\r\n            <div align=\"center\">\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n                <ol>\r\n                    {\r\n                        newsList.map( item => (\r\n                            <New key={item._id} {...item} setNews={setNews} />\r\n                        ))  \r\n                    }\r\n                </ol>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default News\r\n","import { useEffect, useState } from \"react\"\r\nimport {getNews} from '../helpers/News/getNews'\r\n\r\n\r\nexport const useFetchNews = (news) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n         getNews()\r\n            .then((resp) => {\r\n                setState({\r\n                    data: resp,\r\n                    loading: false\r\n                })\r\n            });\r\n    }, [news])\r\n\r\n\r\n    return state;\r\n\r\n}","import { fetchAnonymous } from \"../Petitions/fetch\";\r\n\r\nexport const deleteArchived = async (_id) => {\r\n\r\n    const payload = {\r\n        _id: _id\r\n    }\r\n\r\n    \r\n    const resp = await fetchAnonymous('archived/delete_archived', payload, 'DELETE')\r\n    const response = await resp.json()\r\n    return response\r\n}\r\n\r\n","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport {deleteArchived} from '../../helpers/Archived/deleteArchived'\r\nimport { formatDate } from '../../helpers/Utils/dateFormater'\r\nimport Button from 'react-bootstrap/Button'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ArchivedNew = ({_id,title,description,date,content,author,archiveDate,setArchived}) => {\r\n    \r\n    \r\n    const formatedDate = formatDate(date)\r\n    // Delete an archived new from DB\r\n    const handlerDeleteArchived = async() => {\r\n        const resp = await deleteArchived(_id)\r\n        if(resp === 200){\r\n            handlerDeleteFromList()\r\n        }\r\n    }\r\n\r\n    // Delete this item from the list \r\n    const handlerDeleteFromList = () => {\r\n        setArchived( (news) => {\r\n            return news.filter( doc => doc._id !== _id)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Card style={{ width: '90%' }} className=\"my-3\">\r\n        <Card.Body>\r\n            <Card.Title>{title}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">{description}</Card.Subtitle>\r\n            <Card.Text>{content}</Card.Text>\r\n            <Card.Footer >\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    Archived date: {formatedDate} \r\n                </div>\r\n                <div className=\"col\">\r\n                    Author: {author}\r\n                </div>\r\n                <div className=\"col\">\r\n                    <Button onClick={handlerDeleteArchived}\r\n                            variant=\"dark\">\r\n                        <img \r\n                            src=\"./delete.png\"\r\n                            width=\"25\"\r\n                            height=\"25\"\r\n                            className=\"d-inline-block align-top\"   \r\n                            alt=\"\"                 \r\n                            >\r\n                        </img>\r\n                        Delete\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n                \r\n            </Card.Footer>\r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nArchivedNew.propTypes = {\r\n    _id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    archiveDate: PropTypes.string.isRequired,\r\n    content: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired,\r\n    setArchived: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ArchivedNew\r\n","import {fetchAnonymous} from '../Petitions/fetch'\r\n\r\nexport const getArchived = async () => {\r\n\r\n    const resp = await fetchAnonymous('archived/get_archived', null)\r\n    const archived = await resp.json()\r\n\r\n    return archived\r\n\r\n}","import React, {useState} from 'react'\r\nimport ArchivedNew from '../components/Archived/ArchivedNew'\r\nimport {useFetchArchived} from '../hooks/useFetchArchived'\r\n\r\n\r\nconst Archived = () => {\r\n    \r\n    const [archived,setArchived] = useState([])\r\n    \r\n\r\n    const { data:archivedList, loading } = useFetchArchived( archived );\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <p className=\"display-1 m-auto\">Archived</p>\r\n            </div>\r\n            <div align=\"center\">\r\n                <ol>\r\n                { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n                    {\r\n                        archivedList.map( item => (\r\n                            <ArchivedNew key={item._id} {...item} setArchived={setArchived} />\r\n                        ))\r\n                    }\r\n                </ol>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Archived\r\n","import { useEffect, useState } from \"react\"\r\nimport {getArchived} from '../helpers/Archived/getArchived'\r\n\r\n\r\nexport const useFetchArchived = (archived) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n         getArchived()\r\n            .then((resp) => {\r\n                setState({\r\n                    data: resp,\r\n                    loading: false\r\n                })\r\n            });\r\n    }, [archived])\r\n\r\n\r\n    return state;\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport NavBar from './components/NavBar';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport News from './views/News'\nimport Archived from './views/Archived'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nrequire('dotenv').config();\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Router>\n      <NavBar />\n\n      <Switch>\n        <Route exact path=\"/\" component={News} />\n        <Route path=\"/archived\" component={Archived} />\n      </Switch>\n      \n    </Router>\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}